NAME
    JSON::Any - Wrapper Class for the myriad JSON classes.

VERSION
    Version 1.00

SYNOPSIS
    This module will provide a coherent API to bring together the various
    JSON modules currently on CPAN.

        use JSON::Any;

            my $j = JSON::Any->new;

            $json = $j->objToJson({foo=>'bar', baz=>'quux'});

            $obj = $j->jsonToObj($json);

    or without creating an object:

            $json = JSON::Any->objToJson({foo=>'bar', baz=>'quux'});

            $obj = JSON::Any->jsonToObj($json);

    JSON::Any currently only implements converting back and forth between
    JSON and hashrefs. There is considerably more functionality in many of
    the JSON modules. Ability to access these will be provided in subsequent
    versions of JSON::Any.

    On load, JSON::Any will find a valid JSON module in your @INC by looking
    for them in this order:

            JSON::XS 
            JSON 
            JSON::DWIW 
            JSON::Syck

    And loading the first one it finds.

    You may change the order by specifying it on the "use JSON::Any" line:

            use JSON::Any qw(DWIW Syck XS JSON);
        
    Specifying an order that is missing one of the modules will prevent that
    module from being used:

            use JSON::Any qw(DWIW XS JSON);

    This will check in that order, and will never attempt to load
    JSON::Syck.

FUNCTIONS
    "new"
    There are currently no arguments to "new"

    "handlerType"
    Takes no arguments, returns a string indicating which JSON Module is in
    use.

    "objToJson"
    Takes a single argument, a hashref to be converted into JSON. It returns
    the JSON text in a scalar.

    "jsonToObj"
    Takes a single argument, a string of JSON text to be converted back into
    a hashref.

AUTHOR
    Chris Thompson, "<cthom at cpan.org>"

BUGS
    Please report any bugs or feature requests to "bug-json-any at
    rt.cpan.org", or through the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=JSON-Any>. I will be
    notified, and then you'll automatically be notified of progress on your
    bug as I make changes.

ACKNOWLEDGEMENTS
    This module came about after discussions on irc.perl.org about the fact
    that there were now six separate JSON perl modules with different
    interfaces.

    In the spirit of Class::Any, I have created JSON::Any with the
    considerable help of Chris 'Perigrin' Prather, and Matt 'mst' Trout.

COPYRIGHT & LICENSE
    Copyright 2007 Chris Thompson, all rights reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

